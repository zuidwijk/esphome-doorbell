esphome:
  name: smart-doorbell
  project:
    name: zuidwijk.smart-doorbell
    version: "1.0"

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  platform: esphome

wifi:
  # remove leading '#' and fill in your wifi details
#  ssid: !secret wifi_ssid
#  password: !secret wifi_password
  ap:
  # Enable fallback hotspot (captive portal) in case wifi connection fails
    ssid: "smart-doorbell"

captive_portal:

improv_serial:

esp32_improv:
  authorizer: none

#doesnt work together with captive_portal
esp32_ble_tracker:
  scan_parameters:
    interval: 1100ms
    window: 1100ms
    active: true

bluetooth_proxy:
  active: true

web_server:
  port: 80

dashboard_import:
  package_import_url: github://zuidwijk/esphome-doorbell/smart-doorbell.yaml@main
  import_full_config: true

time:
  - platform: homeassistant
    id: homeassistant_time

text_sensor:
  - platform: version
    name: ESPHome Version
  - platform: wifi_info
    ip_address:
      name: IP
    ssid:
      name: SSID
    bssid:
      name: BSSID

sensor:
  - platform: uptime
    name: Uptime
  - platform: wifi_signal
    name: WiFi Signal
    update_interval: 60s

globals:
  - id: chime
    type: bool
    restore_value: true
    initial_value: 'true'

switch:
  - platform: gpio
    pin:
      number: GPIO5
      inverted: false
    name: Relay
    id: relay
    icon: mdi:alarm-bell
  - platform: restart
    name: Restart
  - platform: template
    name: Chime Active
    id: chime_active
    restore_mode: disabled
    turn_on_action:
      - globals.set:
          id: chime
          value: 'true'
    turn_off_action:
      - globals.set:
          id: chime
          value: 'false'
    lambda: |-
      return id(chime);

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO4
      mode: INPUT_PULLUP
      inverted: true
    name: Button
    filters:
      # Small filter, to debounce the button press.
      - delayed_on: 25ms
      - delayed_off: 25ms
    on_press:
      # Only turn on the chime when it is active.
      then:
        if:
          condition:
            - switch.is_on: chime_active
          then:
            - switch.turn_on: relay
    on_release:
      # On release, turn of the chime.
      - switch.turn_off: relay

  - platform: status
    name: Status
